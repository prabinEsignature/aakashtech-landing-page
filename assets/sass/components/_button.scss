@use "sass:map";
@use "sass:color";
@use "../abstracts/colors" as *;
@use "../abstracts/variables" as *;
@use "../abstracts/mixins" as *;
@use "../abstracts/placeholder" as *;

$btn-bg: map.get($colors, "primary-500");
$btn-text-color: $white;
$btn-font-weight: map.get($font-weights, "semibold");
$btn-font-size: map.get($font-sizes, "base");
$btn-padding-x: 24px;
$btn-padding-y: 8px;
$btn-border-color: map.get($colors, "primary-500");
$btn-border-width: 1px;
$btn-border-radius: 8px;

$btn-hover-bg: color.adjust(map.get($colors, "primary-500"), $lightness: -10%);
$btn-hover-text-color: $white;
$btn-hover-border-color: map.get($colors, "primary-500");
$btn-height: 44px;

// BUTTON COLOR VARIANTS
$button-variants: (
  "primary": (
    bg: color("primary-500"),
    text: color("white"),
    icon-bg: none,
    border-color: color("primary-500"),
    hover-bg: color("onyx-950"),
    hover-text-color: color("white"),
    hover-border-color: color("onyx-500"),
    hover-icon-bg-color: none,
  ),
  "white-primary": (
    bg: color("white"),
    text: color("primary-500"),
    icon-bg: color("primary-500"),
    border-color: color("white"),
    hover-bg: color("onyx-950"),
    hover-text-color: color("white"),
    hover-border-color: color("onyx-950"),
    hover-icon-bg-color: color("white"),
  ),
  "primary-white": (
    bg: color("primary-500"),
    text: color("white"),
    icon-bg: color("white"),
    border-color: color("primary-500"),
    hover-bg: color("white"),
    hover-text-color: color("primary-500"),
    hover-border-color: color("primary-500"),
    hover-icon-bg-color: color("primary-500"),
  ),
  "onyx-900": (
    bg: color("onyx-900"),
    text: color("white"),
    icon-bg: none,
    border-color: color("onyx-900"),
    hover-bg: color("onyx-950"),
    hover-text-color: color("white"),
    hover-border-color: color("onyx-950"),
    hover-icon-bg-color: none,
  )
);

// BUTTON LINK VARIANTS
$button-link-variants: (
  "white": (
    text: color("white"),
    icon: color("white"),
    hover-text-color: color.adjust(color("white"), $lightness: 10%),
    hover-icon-color: color.adjust(color("white"), $lightness: 10%)
  ),
  "gray-700": (
    text: color("gray-700"),
    icon: color("onyx-700"),
    hover-text-color: color.adjust(color("gray-700"), $lightness: 10%),
    hover-icon-color: color.adjust(color("onyx-700"), $lightness: 10%)
  )
);

.btn {
  @extend %flex-inline-center;
  text-align: center;
  font-weight: $btn-font-weight;
  font-family: $font-family-instrument-sans;
  font-size: $btn-font-size;
  border-radius: $btn-border-radius;
  column-gap: 8px;
  height: $btn-height;
  white-space: nowrap;
  padding: $btn-padding-y $btn-padding-x;
  border: $btn-border-width solid $btn-border-color;
  background-color: $btn-bg;
  color: $btn-text-color;
  vertical-align: middle;
  transition: $default-transition;
  cursor: pointer;
  user-select: none;
  text-decoration: none;
  touch-action: manipulation;
  background-image: none;
  transform-origin: bottom;
  -webkit-appearance: none;
  -moz-appearance: none;

  @include breakpoint-down(md) {
    font-size: map.get($font-sizes, "sm") !important;
    height: 40px;
  }

  @include breakpoint-down(xxs) {
    white-space: wrap;
    height: auto !important;
  }

  // EFFECTS
  &:hover,
  &:focus,
  &.focus {
    text-decoration: none;
  }

  &:focus {
    outline: 0;
  }

  &:hover {
    background: $btn-hover-bg !important;
    color: $btn-hover-text-color;
    border-color: $btn-hover-border-color;
    opacity: 1 !important;
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: no-drop;
    background: $btn-bg;
  }

  &.no-shadow {
    box-shadow: none;
    &:hover,
    &:focus,
    &.focus {
      opacity: 0.8;
      box-shadow: none;
      transform: none;
    }
  }

  // BUTTON INNER ELEMENTS
  &-text {
    font-weight: $btn-font-weight;
  }

  &.btn-rounded {
    border-radius: 100vh;
    padding-right: 8px;
    gap: 24px;
    justify-content: space-between;

    .btn-icon {
      border-radius: 100%;
      width: 36px;
      height: 36px;
      min-width: 36px;
      min-height: 36px;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      font-size: 18px;
    }
  }

  // BUTTON SIZE VARIANTS
  &.btn-xl {
    height: 58px;
    min-width: 150px;
    font-size: map.get($font-sizes, "lg") !important;

    @include breakpoint-down(lg) {
      height: 52px;
    }

    @include breakpoint-down(md) {
      height: 48px;
      font-size: map.get($font-sizes, "base") !important;
    }

    @include breakpoint-down(sm) {
      height: 44px;
    }
  }

  &.btn-lg {
    height: 52px;
    min-width: 146px;
    font-size: map.get($font-sizes, "lg") !important;

    @include breakpoint-down(lg) {
      height: 48px;
    }

    @include breakpoint-down(md) {
      height: 44px;
      font-size: map.get($font-sizes, "base") !important;
    }

    @include breakpoint-down(sm) {
      height: 40px;
    }
  }

  &.btn-sm {
    font-size: map.get($font-sizes, "sm") !important;
    height: 36px;

    @include breakpoint-down(md) {
      height: 34px;
      font-size: map.get($font-sizes, "xs") !important;
    }

    @include breakpoint-down(sm) {
      height: 32px;
    }
  }

  &.btn-xs {
    font-size: map.get($font-sizes, "xs");
    height: 34px;

    @include breakpoint-down(md) {
      height: 32px;
      font-size: map.get($font-sizes, "2xs");
    }
  }

  // BUTTON WIDTH VARIANTS
  &.btn-narrow {
    min-width: 100px;
  }
  &.btn-quarter-middle {
    min-width: 140px;
  }
  &.btn-semi-middle {
    min-width: 160px;
  }
  &.btn-middle {
    min-width: 180px;
  }
  &.btn-quarter-wide {
    min-width: 220px;
  }
  &.btn-wide {
    min-width: 260px;
  }
}

@each $variant, $props in $button-variants {
  .btn-#{$variant} {
    background: map.get($props, bg) !important;
    color: map.get($props, text) !important;
    border: $btn-border-width solid map.get($props, border-color) !important;

    .btn-text {
      color: map.get($props, text) !important;
      transition: $default-transition;
    }

    .btn-icon{
      transition: $default-transition;
    }

    &.btn-rounded {
      .btn-icon {
        background: map.get($props, icon-bg) !important;
        color: map.get($props, bg) !important;
      }
    }

    &:hover,
    &:focus,
    &:disabled,
    &:active,
    &.disabled,
    &.active {
      background: map.get($props, hover-bg) !important;
      border-color: map.get($props, hover-border-color) !important;
      color: map.get($props, hover-text-color) !important;

      .btn-text {
        color: map.get($props, hover-text-color) !important;
      }

      &.btn-rounded {
        .btn-icon {
          background: map.get($props, hover-icon-bg-color) !important;
          color: map.get($props, text) !important;
        }
      }
    }

    &:disabled,
    &.disabled {
      opacity: 0.8;
    }
  }
}

// BUTTON BLOCK - FULL WIDTH
.btn-block {
  display: flex;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 0.5rem;
}

// BUTTON LINK
.btn-link {
  background: transparent !important;
  transition: $default-transition;
  padding: 0 !important;
  height: auto !important;

  &:hover {
    padding: 0 !important;
    background: transparent !important;
  }
}

@each $variant, $props in $button-link-variants {
  .btn-link-#{$variant} {
    color: map.get($props, text) !important;

    .btn-text {
      color: map.get($props, text) !important;
    }

    .btn-icon {
      color: map.get($props, icon) !important;
    }

    &:hover {
      color: map.get($props, hover-text-color) !important;

      .btn-text {
        color: map.get($props, hover-text-color) !important;
      }

      .btn-icon {
        color: map.get($props, hover-icon-color) !important;
      }
    }
  }
}

// MISC BUTTON STYLINGS
.icon-btn {
  display: inline-flex!important;
  align-items: center!important;
  justify-content: center!important;
  padding: 0!important;

  &:hover {
    opacity: 0.8;

    img {
      &:not(.hovered-state) {
        display: none;
      }
      &.hovered-state {
        display: inline-flex !important;
      }
    }
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

.whatsapp-btn {
  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    animation: ping 2s infinite;
    width: 24px;
    height: 24px;
    border-radius: 100%;
    background: rgba(59, 178, 74, 0.1882352941);
  }
}
